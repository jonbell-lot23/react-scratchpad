{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/Projects/react2022/6-songlist/src/pages/songlist.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { getSonglist } from \"../data_songlists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Songlist() {\n  _s();\n\n  let params = useParams();\n  let songlist = getSonglist(params.id, 10);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem\"\n    },\n    className: \"flex-grow px-4 py-8 w-full prose antialiased ml-0 sm:ml-56 mt-0 sm:mt-12\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"font-bold\",\n        children: \"Songlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), shows.filter(show => {\n        let filter = searchParams.get(\"filter\");\n        if (!filter) return true;\n        let name = show.name.toLowerCase();\n        return name.startsWith(filter.toLowerCase());\n      }).map(show => /*#__PURE__*/_jsxDEV(NavLink, {\n        style: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return {\n            display: \"block\",\n            margin: \"1rem 0\",\n            color: isActive ? \"red\" : \"\"\n          };\n        },\n        to: `/shows/${show.id}`,\n        children: [show.location, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), \" \", show.date]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Songlist, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Songlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songlist\");","map":{"version":3,"sources":["/Users/jon/Documents/Projects/react2022/6-songlist/src/pages/songlist.js"],"names":["useParams","getSonglist","Songlist","params","songlist","id","padding","shows","filter","show","searchParams","get","name","toLowerCase","startsWith","map","isActive","display","margin","color","location","date"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAIC,MAAM,GAAGH,SAAS,EAAtB;AACA,MAAII,QAAQ,GAAGH,WAAW,CAACE,MAAM,CAACE,EAAR,EAAY,EAAZ,CAA1B;AACA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADT;AAEE,IAAA,SAAS,EAAC,0EAFZ;AAAA,2BAIE;AAAA,8BACE;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGC,KAAK,CACHC,MADF,CACUC,IAAD,IAAU;AAChB,YAAID,MAAM,GAAGE,YAAY,CAACC,GAAb,CAAiB,QAAjB,CAAb;AACA,YAAI,CAACH,MAAL,EAAa,OAAO,IAAP;AACb,YAAII,IAAI,GAAGH,IAAI,CAACG,IAAL,CAAUC,WAAV,EAAX;AACA,eAAOD,IAAI,CAACE,UAAL,CAAgBN,MAAM,CAACK,WAAP,EAAhB,CAAP;AACD,OANF,EAOEE,GAPF,CAOON,IAAD,iBACH,QAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAA,cAAC;AAAEO,YAAAA;AAAF,WAAD;AAAA,iBAAmB;AACxBC,YAAAA,OAAO,EAAE,OADe;AAExBC,YAAAA,MAAM,EAAE,QAFgB;AAGxBC,YAAAA,KAAK,EAAEH,QAAQ,GAAG,KAAH,GAAW;AAHF,WAAnB;AAAA,SADT;AAME,QAAA,EAAE,EAAG,UAASP,IAAI,CAACJ,EAAG,EANxB;AAAA,mBASGI,IAAI,CAACW,QATR,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,OAUUX,IAAI,CAACY,IAVf;AAAA,SAOOZ,IAAI,CAACJ,EAPZ;AAAA;AAAA;AAAA;AAAA,cARH,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAnCuBH,Q;UACTF,S;;;KADSE,Q","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { getSonglist } from \"../data_songlists\";\n\nexport default function Songlist() {\n  let params = useParams();\n  let songlist = getSonglist(params.id, 10);\n  return (\n    <main\n      style={{ padding: \"1rem\" }}\n      className=\"flex-grow px-4 py-8 w-full prose antialiased ml-0 sm:ml-56 mt-0 sm:mt-12\"\n    >\n      <p>\n        <span class=\"font-bold\">Songlist</span>\n\n        {shows\n          .filter((show) => {\n            let filter = searchParams.get(\"filter\");\n            if (!filter) return true;\n            let name = show.name.toLowerCase();\n            return name.startsWith(filter.toLowerCase());\n          })\n          .map((show) => (\n            <NavLink\n              style={({ isActive }) => ({\n                display: \"block\",\n                margin: \"1rem 0\",\n                color: isActive ? \"red\" : \"\",\n              })}\n              to={`/shows/${show.id}`}\n              key={show.id}\n            >\n              {show.location}\n              <br /> {show.date}\n            </NavLink>\n          ))}\n      </p>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}