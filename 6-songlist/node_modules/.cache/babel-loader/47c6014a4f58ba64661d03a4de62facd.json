{"ast":null,"code":"import _slicedToArray from\"/Users/jon/Documents/Projects/react2022/6-songlist/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{NavLink,Outlet,useSearchParams}from\"react-router-dom\";import{getSongs}from\"../data_songs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Songs(){var songs=getSongs();var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,2),searchParams=_useSearchParams2[0],setSearchParams=_useSearchParams2[1];return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"nav\",{style:{padding:\"1rem\"},class:\"w-full sm:w-56 relative sm:fixed flex-none top-24 bottom-0 mb-12 sm:mb-0 bg-white overflow-y-auto\",children:songs.filter(function(song){var filter=searchParams.get(\"filter\");if(!filter)return true;var name=song.name.toLowerCase();return name.startsWith(filter.toLowerCase());}).map(function(song){return/*#__PURE__*/_jsx(NavLink,{style:function style(_ref){var isActive=_ref.isActive;return{display:\"block\",margin:\"1rem 0\",color:isActive?\"red\":\"\"};},to:\"/songs/\".concat(song.id),children:song.name},song.id);})}),/*#__PURE__*/_jsx(Outlet,{})]});}","map":{"version":3,"sources":["/Users/jon/Documents/Projects/react2022/6-songlist/src/pages/songs.js"],"names":["NavLink","Outlet","useSearchParams","getSongs","Songs","songs","searchParams","setSearchParams","display","padding","filter","song","get","name","toLowerCase","startsWith","map","isActive","margin","color","id"],"mappings":"wIAAA,OAASA,OAAT,CAAkBC,MAAlB,CAA0BC,eAA1B,KAAiD,kBAAjD,CACA,OAASC,QAAT,KAAyB,eAAzB,C,wFAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAC9B,GAAIC,CAAAA,KAAK,CAAGF,QAAQ,EAApB,CACA,qBAAsCD,eAAe,EAArD,sDAAKI,YAAL,sBAAmBC,eAAnB,sBAEA,mBACE,aAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAZ,wBACE,YACE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CADT,CAIE,KAAK,CAAC,mGAJR,UAMGJ,KAAK,CACHK,MADF,CACS,SAACC,IAAD,CAAU,CAChB,GAAID,CAAAA,MAAM,CAAGJ,YAAY,CAACM,GAAb,CAAiB,QAAjB,CAAb,CACA,GAAI,CAACF,MAAL,CAAa,MAAO,KAAP,CACb,GAAIG,CAAAA,IAAI,CAAGF,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAX,CACA,MAAOD,CAAAA,IAAI,CAACE,UAAL,CAAgBL,MAAM,CAACI,WAAP,EAAhB,CAAP,CACD,CANF,EAOEE,GAPF,CAOM,SAACL,IAAD,qBACH,KAAC,OAAD,EACE,KAAK,CAAE,wBAAGM,CAAAA,QAAH,MAAGA,QAAH,OAAmB,CACxBT,OAAO,CAAE,OADe,CAExBU,MAAM,CAAE,QAFgB,CAGxBC,KAAK,CAAEF,QAAQ,CAAG,KAAH,CAAW,EAHF,CAAnB,EADT,CAME,EAAE,kBAAYN,IAAI,CAACS,EAAjB,CANJ,UASGT,IAAI,CAACE,IATR,EAOOF,IAAI,CAACS,EAPZ,CADG,EAPN,CANH,EADF,cA4BE,KAAC,MAAD,IA5BF,GADF,CAgCD","sourcesContent":["import { NavLink, Outlet, useSearchParams } from \"react-router-dom\";\nimport { getSongs } from \"../data_songs\";\n\nexport default function Songs() {\n  let songs = getSongs();\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <nav\n        style={{\n          padding: \"1rem\",\n        }}\n        class=\"w-full sm:w-56 relative sm:fixed flex-none top-24 bottom-0 mb-12 sm:mb-0 bg-white overflow-y-auto\"\n      >\n        {songs\n          .filter((song) => {\n            let filter = searchParams.get(\"filter\");\n            if (!filter) return true;\n            let name = song.name.toLowerCase();\n            return name.startsWith(filter.toLowerCase());\n          })\n          .map((song) => (\n            <NavLink\n              style={({ isActive }) => ({\n                display: \"block\",\n                margin: \"1rem 0\",\n                color: isActive ? \"red\" : \"\",\n              })}\n              to={`/songs/${song.id}`}\n              key={song.id}\n            >\n              {song.name}\n            </NavLink>\n          ))}\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}