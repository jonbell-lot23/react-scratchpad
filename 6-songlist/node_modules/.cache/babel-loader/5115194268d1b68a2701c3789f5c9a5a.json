{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/Projects/react2022/6-songlist/src/pages/songs.js\",\n    _s = $RefreshSig$();\n\nimport { NavLink, Outlet, useSearchParams } from \"react-router-dom\";\nimport { getSongs } from \"../data_songs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Songs() {\n  _s();\n\n  let songs = getSongs();\n  let [searchParams, setSearchParams] = useSearchParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        padding: \"1rem\"\n      },\n      class: \"w-full sm:w-56 relative sm:fixed flex-none top-24 bottom-0 mb-12 sm:mb-0 bg-white overflow-y-auto\",\n      children: songs.filter(song => {\n        let filter = searchParams.get(\"filter\");\n        if (!filter) return true;\n        let name = song.name.toLowerCase();\n        return name.startsWith(filter.toLowerCase());\n      }).map(song => /*#__PURE__*/_jsxDEV(NavLink, {\n        style: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return {\n            display: \"block\",\n            margin: \"1rem 0\",\n            color: isActive ? \"red\" : \"\"\n          };\n        },\n        to: `/songs/${song.id}`,\n        children: song.name\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Songs, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/jon/Documents/Projects/react2022/6-songlist/src/pages/songs.js"],"names":["NavLink","Outlet","useSearchParams","getSongs","Songs","songs","searchParams","setSearchParams","display","padding","filter","song","get","name","toLowerCase","startsWith","map","isActive","margin","color","id"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,kBAAjD;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,MAAIC,KAAK,GAAGF,QAAQ,EAApB;AACA,MAAI,CAACG,YAAD,EAAeC,eAAf,IAAkCL,eAAe,EAArD;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OADT;AAIE,MAAA,KAAK,EAAC,mGAJR;AAAA,gBAMGJ,KAAK,CACHK,MADF,CACUC,IAAD,IAAU;AAChB,YAAID,MAAM,GAAGJ,YAAY,CAACM,GAAb,CAAiB,QAAjB,CAAb;AACA,YAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AACb,YAAIG,IAAI,GAAGF,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAX;AACA,eAAOD,IAAI,CAACE,UAAL,CAAgBL,MAAM,CAACI,WAAP,EAAhB,CAAP;AACD,OANF,EAOEE,GAPF,CAOOL,IAAD,iBACH,QAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAA,cAAC;AAAEM,YAAAA;AAAF,WAAD;AAAA,iBAAmB;AACxBT,YAAAA,OAAO,EAAE,OADe;AAExBU,YAAAA,MAAM,EAAE,QAFgB;AAGxBC,YAAAA,KAAK,EAAEF,QAAQ,GAAG,KAAH,GAAW;AAHF,WAAnB;AAAA,SADT;AAME,QAAA,EAAE,EAAG,UAASN,IAAI,CAACS,EAAG,EANxB;AAAA,kBASGT,IAAI,CAACE;AATR,SAOOF,IAAI,CAACS,EAPZ;AAAA;AAAA;AAAA;AAAA,cARH;AANH;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GApCuBhB,K;UAEgBF,e;;;KAFhBE,K","sourcesContent":["import { NavLink, Outlet, useSearchParams } from \"react-router-dom\";\nimport { getSongs } from \"../data_songs\";\n\nexport default function Songs() {\n  let songs = getSongs();\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <nav\n        style={{\n          padding: \"1rem\",\n        }}\n        class=\"w-full sm:w-56 relative sm:fixed flex-none top-24 bottom-0 mb-12 sm:mb-0 bg-white overflow-y-auto\"\n      >\n        {songs\n          .filter((song) => {\n            let filter = searchParams.get(\"filter\");\n            if (!filter) return true;\n            let name = song.name.toLowerCase();\n            return name.startsWith(filter.toLowerCase());\n          })\n          .map((song) => (\n            <NavLink\n              style={({ isActive }) => ({\n                display: \"block\",\n                margin: \"1rem 0\",\n                color: isActive ? \"red\" : \"\",\n              })}\n              to={`/songs/${song.id}`}\n              key={song.id}\n            >\n              {song.name}\n            </NavLink>\n          ))}\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}